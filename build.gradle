plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.jakubspiewak'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

ext {
    set('springCloudVersion', "2020.0.3")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/jakubspiewak-ash/ash-libs")
            credentials {
                username = System.getenv("GITHUB_USERNAME") ?: project.findProperty("GITHUB_USERNAME")
                password = System.getenv("GITHUB_TOKEN") ?: project.findProperty("GITHUB_TOKEN")
            }
        }
    }
    mavenCentral()
}

dependencies {
    // ash
    implementation 'com.jakubspiewak:ash-api-model-lib:0.0.1.14-SNAPSHOT'

    // spring
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // postgres
    implementation 'org.postgresql:postgresql'

    // test
    testImplementation 'org.mockito:mockito-core:2.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

